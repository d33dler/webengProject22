{"version":3,"sources":["http-common.js","services/backend.routes.js","components/fields_create.js","components/comp.display_entry.js","components/params_field_types.js","components/helper_fun.js","components/comp.post_entry.js","components/fields_search.js","components/comp.entry_list.js","components/fields_stats.js","components/comp.req_stats.js","components/comp.stats.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","process","REACT_APP_API_BASE_URL","mode","id","get","param","value","params","filter_options","console","log","delete","patch","fields","conditions","data","post","put","lat","long","allArgs","_","pick","key","min","max","format","city","body","creationFields","name","type","options","values","DisplayEntry","props","generateLabel","clazz","field","color","font","className","style","fontWeight","htmlFor","generateDisplay","Object","entries","map","k","v","this","Component","textFieldParams","marginRight","rangeParams","checkboxParams","handleCheckHook","comp","_compSetter","e","target","checked","handleChangeHook","length","handleChange","event","setState","renderField","fieldName","onChange","defaultValue","createLabel","tok","generateForm","inputs","setInputs","defaultValues","URLSearchParams","renderRangeInput","isUndefined","renderRadioHook","generateButton","label","_func","onClick","valueSetter","id_min","id_max","class","o","ix","defaultChecked","PostArticle","useState","fieldSet","submitted","state","ArticleService","then","response","catch","el","fields_search","placeholder","sqlOp","op","child","parent","fieldMap","Map","all_fields","forEach","set","defaultState","update","searched","queryUpdate","singleUpdate","SearchArticle","setEntries","currentEntry","setCurrentEntry","currentIndex","setIndex","bulkUpdate","setBulkUpdate","soloUpdate","setSoloUpdate","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","retrieveEntries","refreshList","parsed","parseInputs","filterSearch","status","appendNewValue","_selfTriggerRedirect","p","append","replace","inputsCopy","structuredClone","arr","push","sendRequest","_request","msg200","msg500","a","window","alert","prevState","useEffect","obj","isNull","filterDelete","JSON","stringify","updateQuery","filterUpdate","r","updateAllEntries","entry","index","setSelection","address","externalId","prev","fun","StatisticForm","getByParam","defaultVal","i","newState","marginTop","paddingTop","to","Statistics","useParams","setSubmit","setData","stateful","setBody","getStatistics","history","createHistory","App","exact","path","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.262cef7e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://0.0.0.0:6868/nrp/\",\n    headers: {\n        \"Accept\" : \"application/json\" ,\n        \"Content-type\": \"application/json\",\n        'Access-Control-Allow-Origin': process.env.REACT_APP_API_BASE_URL\n    },\n    mode: \"cors\"\n})","import _ from 'lodash';\nimport axios from '../http-common';\n\nclass BackendRoutes {\n  getById(id) {\n    return axios.get(`articles/id/${id}`);\n  }\n  getByParam(param,value) {\n    return axios.get(`articles/${param}`, {\n      params: {\n        value: value\n      }\n    });\n  }\n\n  filterSearch(filter_options) {\n    return axios.get(`articles/search/filter`, {\n      params: filter_options\n    })\n  }\n  filterDelete(filter_options) {\n    console.log(filter_options);\n    return axios.delete(`articles/search/filter`, {\n      params: filter_options\n    })\n  }\n  filterUpdate(filter_options) {\n    return axios.patch(`articles/search/filter`, filter_options.fields,\n        {\n      params: filter_options.conditions\n    })\n  }\n\n\n  create(data) {\n    return axios.post('articles/new', data); // test this ?\n  }\n\n  updateById(id, data) {\n    return axios.put(`articles/id/${id}`, data);\n  }\n\n  deleteById(id) {\n    return axios.delete(`articles/id/${id}`);\n  }\n\n  deleteByLocation(lat, long) {\n    return axios.delete('articles/location', {\n      params: {\n        lat: `${lat}`,\n        long: `${long}`,\n      },\n    });\n  }\n\n  deleteAll() {\n    return axios.delete('articles');\n  }\n\n  findByParameter(allArgs) {\n    return axios.get(\n      'articles/top-list/',\n      {\n        params: _.pick(allArgs, (value, key) => !!value), // test this\n        // probably needs headers\n      },\n    );\n  }\n\n  findByRent(min, max, format) {\n    return axios.get(\n      'articles/search-budget',\n      {\n        params: {\n          min: `${min}`,\n          max: `${max}`,\n          format: `${format}`,\n        },\n      },\n    );\n  }\n\n  findByLocation(lat, long, format) {\n    return axios.get(\n      'articles/location?',\n      {\n        params: {\n          lat: `${lat}`,\n          long: `${long}`,\n          format: `${format}`,\n        },\n      },\n    );\n  }\n  getStatistics(city,body){\n    return axios.get(`articles/statistics/${city}`, {\n      params: body\n    })}\n\n}\n\n\nexport default new BackendRoutes();\n","export const creationFields = [\n  {\n    name: 'Address',\n    id: 'address',\n    type: 'text',\n  },\n  {\n    name: 'Postal Code',\n    id: 'postalCode',\n    type: 'text',\n  },\n  {\n    name: 'City',\n    id: 'city',\n    type: 'text',\n  },\n  {\n    name: 'Area (m2)',\n    id: 'areaSqm',\n    type: 'text',\n  },\n  {\n    name: 'Rent',\n    id: 'rent',\n    type: 'text',\n  },\n  {\n    name: 'Deposit',\n    id: 'deposit',\n    type: 'text',\n  },\n  {\n    name: 'Latitude',\n    id: 'latitude',\n    type: 'text',\n  },\n  { name: 'Longitude',\n    id: 'longitude',\n    type: 'text',},\n  {\n    name: 'Room active',\n    id: 'isRoomActive',\n    type: 'checkbox',\n    options: ['Yes', 'No'],\n    values: [true, false],\n  }\n];\n","import React, {Component} from \"react\";\n\n\nexport default class DisplayEntry extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    generateLabel = (clazz, field, color, font) => {\n        return (<div className={clazz}>\n                <label style={{color: color, fontWeight: font }} htmlFor={field}>{`${field}`}</label>\n            </div>\n        )\n    }\n\n    generateDisplay = () => {\n        return <div className={\"display-entry\"}>\n            <ul>\n                {Object.entries(this.props.data).map(([k, v]) =>\n                    <li key={k}>\n                        {this.generateLabel(\"field\", k+` :`, \"blue\", \"bold\")}\n                        {this.generateLabel(\"value\", v, \"green\", \"normal\")}\n                    </li>\n                )}\n            </ul>\n        </div>\n    }\n\n    render() {\n        return this.generateDisplay();\n    }\n}","export const textFieldParams = {\n    type: 'text',\n    marginRight: '250px'\n}\nexport const rangeParams = {\n    type: 'number',\n    marginRight: '20px'\n}\nexport const checkboxParams = {\n    type: 'checkbox',\n    marginRight: '10px'\n}","/**\n * Helper functions Javascript file\n */\n\nimport React from \"react\";\nimport {checkboxParams, rangeParams, textFieldParams} from \"./params_field_types\";\nimport {isUndefined} from \"lodash\";\n\n/**\n *\n * @param fieldSet\n * @param defaultVal\n * @returns {{submitted: boolean}}\n */\nexport function newState(fieldSet, defaultVal) {\n    let state = {submitted: false};\n    for (let i = 0; i < fieldSet.length; i++) {\n        state[`${fieldSet[i].id}`] = defaultVal;\n    }\n    return state;\n}\n\nexport function handleCheckHook(comp, _compSetter, value, e) {\n    comp[`${value}`] = e.target.checked;\n    _compSetter(comp);\n}\n\nexport function handleChangeHook(comp, _compSetter, value, e) {\n    if (e.target.value.length !== 0) {\n        comp[`${value}`] = e.target.value;\n    } else delete comp[`${value}`];\n    _compSetter(comp);\n    console.log(comp);\n}\n\nexport function handleChange(comp, value, event) {\n    comp.setState({[`${value}`]: event.target.value});\n}\n\n\n\nexport function generateDialogue( text) {\n   return <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n         aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {text}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">OK</button>\n                </div>\n            </div>\n        </div>\n    </div>\n}\n\nexport function renderField(params, id, fieldName, onChange, defaultValue = \"\") {\n    return (\n        <div className=\"form-group\">\n            <label style={{marginRight: params.marginRight}} id={fieldName} htmlFor={id}>{fieldName}</label>\n            <input type={params.type === \"range\" ? \"number\" : params.type}\n                   id={id}\n                   defaultValue={defaultValue}\n                   onChange={onChange}/>\n        </div>\n    );\n}\n\nexport function stateful(fieldSet, defaultVal) {\n    let state = {};\n    for (let i = 0; i < fieldSet.length; i++) {\n        state[`${fieldSet[i].id}`] = defaultVal;\n    }\n    return state;\n}\n\nexport function createLabel(fieldName, tok) {\n    return (<label id={fieldName} htmlFor={tok}>{fieldName}</label>)\n}\n\nexport function generateForm(fields, inputs, setInputs, defaultValues = new URLSearchParams()) {\n   return fields.map((field) => {\n        const {\n            name, id, type, options, values\n        } = field;\n        switch (type) {\n            case 'text':\n                return (renderField(textFieldParams, id, name,\n                    (e => {\n                        handleChangeHook(inputs, setInputs, id, e)\n                    }), defaultValues.get(`${id}`)))\n            case 'range':\n                return renderRangeInput(id, inputs, setInputs, name, defaultValues)\n            case 'checkbox':\n                if(isUndefined(inputs[id])) inputs[id] = false;\n                return (renderField(checkboxParams, id, name,\n                    (e => handleCheckHook(inputs, setInputs, id, e))));\n            case 'radio':\n                return (renderRadioHook(id, inputs, setInputs, values, options, name, defaultValues))\n            default:\n                return null;\n        }\n    })\n}\n\nexport function generateButton(label, _func ) {\n    return  <button\n        className=\"btn btn-outline-secondary\"\n        type=\"button\"\n        onClick={_func}\n    >{label}\n    </button>\n}\n\n\nexport function renderRangeInput(id, value, valueSetter, label, defaultValues = new URLSearchParams()) {\n    const id_min = id + \"_min\";\n    const id_max = id + \"_max\";\n    return (\n        <section class=\"mb-lg-2\">\n            <div className=\"d-flex align-items-center mt-sm-1 pb-1\">\n                <div className=\"md-form md-outline my-0\">\n                    {\n                        renderField(rangeParams, id_min, label + ' min',\n                            (event => handleChangeHook(value, valueSetter, id_min, event)), defaultValues.get(id_min))}\n                </div>\n                <div className=\"md-form md-outline my-0\">\n                    {\n                        renderField(rangeParams, id_max, label + ' max',\n                            (event => handleChangeHook(value, valueSetter, id_max, event)), defaultValues.get(id_max))}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function renderRadioHook(id, value, valueSetter,values, options, label, defaultValue = new URLSearchParams()) {\n    return (\n        <>\n            <div>\n                <ul>\n                    {createLabel(label, id)}\n                    {options.map((o, ix) => (\n                        <div className=\"form-group\">\n                            <input type=\"radio\"\n                                   id={`${id}_${o}`}\n                                   name={id}\n                                   defaultChecked={!isUndefined(defaultValue.get(`${id}`))\n                                   && defaultValue.get(`${id}`) === values[ix] }\n                                   value={values[ix]}\n                                   onChange={(event => handleChangeHook(value, valueSetter, id, event))}\n                            />\n                            <label htmlFor={`${id}_${o}`}>{o}</label>\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        </>\n    )\n}\n\nexport function renderRadio(comp, id, fieldName, options, values) {\n    return (\n        <>\n            <div>\n                <ul>\n                    {createLabel(fieldName, id)}\n                    {options.map((o, ix) => (\n                        <div className=\"form-group\">\n                            <input type=\"radio\"\n                                   id={`${id}_${o}`}\n                                   value={values[ix]}\n                                   onChange={(event => handleChange(comp, id, event))}\n                                   checked={comp.state[`${id}`] == values[ix]}/>\n                            <label htmlFor={`${id}_${o}`}>{o}</label>\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        </>\n    )\n}\n\n","import React, {Component, useState} from 'react';\nimport ArticleService from '../services/backend.routes';\nimport {creationFields} from './fields_create';\nimport DisplayEntry from \"./comp.display_entry\";\nimport {renderField, renderRadio, newState, handleChange, generateForm, generateButton} from \"./helper_fun\";\n\nconst PostArticle = () => {\n\n    const [fieldSet, updateFieldSet] = useState(creationFields);\n    const [inputs, setInputs] = useState({});\n    const [state, setState] = useState({submitted: false, data: null});\n\n    function uploadArticle() {\n        ArticleService.create(inputs)\n            .then((response) => {\n                console.log(response.data);\n                setState({submitted: true, data: response.data});\n            }).catch((el) => {\n            console.log(el);\n        });\n    }\n\n\n    function refresh() {\n        setState({submitted: false, data: null});\n        setInputs({});\n    }\n\n    return (\n        <div className=\"submit-form\">\n            {state.submitted ? (\n                <div>\n                    <h5>Article was uploaded into the database!</h5>\n                    <DisplayEntry data={state.data}/>\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={refresh}>\n                        Continue\n                    </button>\n                </div>\n            ) : (\n                <form>\n                    {generateForm(fieldSet, inputs, setInputs)}\n                    {generateButton(\"Submit\", uploadArticle)}\n                </form>)\n            }\n        </div>\n    );\n\n}\n\n\n\nexport default PostArticle;\n\n/*\n{\n    searchFields.map((field) => { //helperfun abstract out\n        const {\n            name, id, type, options, values\n        } = field;\n        switch (type) {\n            case 'text':\n                return renderField(textFieldParams, id, name, event => handleChange(this, id, event))\n            case 'radio':\n                return (renderRadio(this, id, name, options, values));\n            default:\n                return null;\n        }\n    })\n}\n\n */\n","export const fields_search = [\n    {\n        id: 'externalId',\n        type: 'text',\n        name: 'External Id',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        id: 'rent',\n        type: 'range',\n        name: 'Rent',\n        placeholder: 'rent',\n        sqlOp: ['gte', 'lte'],\n        op: 'like',\n    },\n    {\n        name: 'Address',\n        id: 'address',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'Postal Code',\n        id: 'postalCode',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'City',\n        id: 'city',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'Area (m2)',\n        id: 'areaSqm',\n        type: 'range',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Deposit',\n        id: 'deposit',\n        type: 'range',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Room active',\n        id: 'isRoomActive',\n        type: 'radio',\n        options: ['Any', 'Y', 'N'],\n        values: ['', 'true', 'false'],\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Order:',\n        id: 'order',\n        child: 'order_by',\n        type: 'radio',\n        options: ['None', 'Ascending', 'Descending'],\n        values: ['', 'ASC', 'DESC'],\n        placeholder: 'ID',\n        sqlOp: 'order',\n    },\n    {\n        name: 'Order by:',\n        parent: 'order',\n        id: 'order_by',\n        type: 'radio',\n        options: ['Rent', 'Deposit', 'Area(m2)'],\n        values: ['rent', 'deposit', 'areaSqm'],\n        placeholder: 'orderBy',\n        sqlOp: 'order',\n    },\n    {\n        name: 'Limit ',\n        id: 'limit',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'limit',\n    },\n];\n\nconst fieldMap = new Map();\n\nexport const all_fields =\n    [\n        {id: 'externalId'},\n        {id: 'rent'},\n        {id: 'areaSqm_min'},\n        {id: 'areaSqm_max'},\n        {id: 'deposit_min'},\n        {id: 'deposit_max'},\n        {id: 'isRoomActive'},\n        {id: 'limit'},\n        {id: 'order'},\n        {id: 'order_by'},\n        {id: 'isRoomActive'},\n        {id: 'areaSqm'},\n        {id: 'city'},\n        {id: 'address'},\n        {id: 'rent_min'},\n        {id: 'rent_max'},\n        {id: 'postalCode'}\n    ]\n\n\nfields_search.forEach((o) => {\n    fieldMap.set(o.id, o);\n});\n\nexport {fieldMap}","import React, {Component, createContext, useContext, useEffect, useState} from \"react\";\nimport ArticleService from '../services/backend.routes'\nimport DisplayEntry from \"./comp.display_entry\";\nimport _, {isNull, isUndefined} from \"lodash\";\nimport {fields_search, fieldMap, all_fields} from \"./fields_search\";\nimport {creationFields} from \"./fields_create\";\nimport structuredClone from \"@ungap/structured-clone\"\nimport {\n    generateButton, generateDialogue,\n    generateForm,\n} from \"./helper_fun\";\n\nimport {checkboxParams, textFieldParams} from \"./params_field_types\";\nimport {useNavigate, useParams} from \"@reach/router\";\nimport {useSearchParams} from 'react-router-dom'\n\nconst inputGrSm = \"input-group input-group-sm mb-3\"\n\nconst defaultState = {\n    update: false,\n    searched: false,\n    queryUpdate: false,\n    singleUpdate: false,\n}\n\nconst SearchArticle = (props) => {\n    const [state, setState] = useState(defaultState);\n    const [entries, setEntries] = useState([]);\n    const [currentEntry, setCurrentEntry] = useState(null);\n    const [currentIndex, setIndex] = useState(-1);\n    const [fieldSet, updateFieldSet] = useState(fields_search);\n    let [inputs, setInputs] = useState({});\n    const [bulkUpdate, setBulkUpdate] = useState({});\n    const [soloUpdate, setSoloUpdate] = useState({});\n    let navigate = useNavigate();\n    let [searchParams, setSearchParams] = useSearchParams();\n\n    function retrieveEntries() {\n        if (state.searched === false) {\n            refreshList()\n            const parsed = parseInputs()\n            console.log(parsed);\n            ArticleService.filterSearch(parsed)\n                .then(response => {\n                    let data;\n                    if (response.status === 204) {\n                        data = null;\n                    } else {\n                        data = response.data;\n                    }\n                    setEntries(data);\n                    console.log(response.data);\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n            appendNewValue(\"searched\", true)\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"USED EFFECT\");\n        all_fields.forEach((obj) => {\n            const param = searchParams.get(`${obj.id}`);\n            if (!isNull(param)) {\n                if (isUndefined(inputs[`${obj.id}`])) {\n                    inputs[`${obj.id}`] = param;\n                }\n            }\n        });\n        setInputs(inputs);\n        retrieveEntries();\n    }, [])\n\n    function _selfTriggerRedirect() {\n        const p = new URLSearchParams();\n        Object.entries(inputs).forEach(([key, value]) => {\n            p.append(`${key}`, `${value}`);\n        })\n        setSearchParams(inputs);\n        navigate(\"/../nrp/articles/search?\" + p, {replace: true});\n    }\n\n    function parseInputs() {\n        const inputsCopy = structuredClone(inputs)\n        Object.entries(inputsCopy).forEach(([key, value]) => {\n            const field = fieldMap.get(key);\n            if (!isUndefined(field) && !isUndefined(field.parent)) {\n                if (!isUndefined(inputsCopy[field.parent])) {\n                    const v = inputsCopy[key];\n                    const arr = [];\n                    arr.push(v);\n                    arr.push(inputsCopy[field.parent])\n                    inputsCopy[field.parent] = arr;\n                }\n                delete inputsCopy[key]\n            }\n        })\n        return inputsCopy;\n    }\n\n\n    function refreshList() {\n        setEntries([]);\n        setCurrentEntry(null);\n        setIndex(-1);\n    }\n\n    function setSelection(entry, index) {\n        setCurrentEntry(entry);\n        setIndex(index);\n    }\n\n    function deleteSelectedEntry() {\n        sendRequest(ArticleService.filterDelete, {externalId: currentEntry.externalId},\n            \"Delete query accepted rows! Filter properties used\\n\", \"0 entries deleted\")\n            .then(() => {\n                setEntries([]);\n                refreshList(); })\n    }\n\n    function getSoloUpdateForm() {\n        setEntries([currentEntry]);\n        appendNewValue(\"singleUpdate\", true);\n    }\n\n    function updateSelectedEntry() {\n        const updateQuery = {\n            conditions: {externalId: currentEntry.externalId},\n            fields: soloUpdate\n        }\n        sendRequest(ArticleService.filterUpdate,\n            updateQuery,\n            \"Article patch sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2), \"500 Internal server error\").then((r) => {\n                if (!isNull(r)) {\n                    setCurrentEntry(prev => ({...prev, ...soloUpdate}))\n                }\n            }\n        );\n    }\n\n    function deleteAllEntries() {\n        const parsed = parseInputs()\n        sendRequest(ArticleService.filterDelete, parsed,\n            \"Delete query sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2), \"500 Internal server error\").then(() => {\n            refreshList();\n        });\n    }\n\n    function updateAllEntries() {\n\n        const parsed = parseInputs()\n        const updateQuery = {\n            conditions: parsed,\n            fields: bulkUpdate\n        }\n        sendRequest(ArticleService.filterUpdate, updateQuery,\n            \"Article patch sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2),\n            \"500 Internal server error\").then(r => {\n            if (!isUndefined(r)) {\n                window.alert(\"Server says:\\nUpdated \" + r.data + \" rows! <3\")\n                refreshList();\n            }\n        });\n\n    }\n\n    async function sendRequest(_request, parsed, msg200, msg500,) {\n        return await _request(parsed)\n            .then(response => {\n                if (response.status === 500) {\n                    window.alert(msg500);\n                    return null;\n                } else {\n                    window.alert(msg200);\n                    return response;\n                }\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    function resetState() {\n        setEntries([]);\n        setState(prevState => ({\n            ...prevState,\n            update: false,\n            searched: false\n        }))\n    }\n\n    function appendNewValue(param, value) {\n        setState(prevState => ({\n            ...prevState,\n            [param]: value\n        }))\n    }\n\n    return <div className=\"list row\">\n        <div className=\"col-md-8\">\n            {generateForm(fieldSet, inputs, setInputs, searchParams)}\n            <div className=\"input-group-append\">\n                {generateButton(\"Search\", () => {\n                    resetState();\n                    retrieveEntries();\n                    _selfTriggerRedirect();\n                })}\n                {generateButton(\"Update all\", () => {\n                    refreshList();\n                    setEntries([]);\n                    appendNewValue('update', true)\n                })}\n                {generateButton(\"Delete all\", deleteAllEntries)}\n                {state.update ? <form className=\"col-md-8\">\n                    {generateForm(creationFields, bulkUpdate, setBulkUpdate)}\n                    {generateButton(\"Update\", () => {\n                        updateAllEntries();\n                        _selfTriggerRedirect();\n                    })}\n                </form> : null}\n            </div>\n        </div>\n        <div className=\"col-md-6\">\n            <h4>Article List</h4>\n            <ul className=\"list-group\">\n                {entries.length > 0 &&\n                entries.map((entry, index) =>\n                    <li\n                        className={\"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\n                        onClick={() => setSelection(entry, index)}\n                        key={index}>\n                        {entry.address + \", \" + entry.city}\n                    </li>)}\n            </ul>\n\n        </div>\n        <div className=\"col-md-6\">\n            {currentEntry && entries ? <div className={\"col-md-8\"}>\n                <DisplayEntry data={currentEntry}/>\n                <button\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={deleteSelectedEntry}>\n                    Delete\n                </button>\n                <button\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={getSoloUpdateForm}>\n                    Update\n                </button>\n                <div>\n                    {state.singleUpdate ?\n                        <div>{generateForm(creationFields, soloUpdate, setSoloUpdate)}\n                            {generateButton(\"PATCH\", updateSelectedEntry)}</div> : null}\n                </div>\n            </div> : <div>\n                <br/>\n                <p>No article selected</p>\n            </div>}\n        </div>\n    </div>\n}\n\nexport default SearchArticle;\n/*\n\n    <button\n        className=\"m-3 btn btn-sm btn-danger\"\n        onClick={this.removeEntry}\n    >\n        Remove All\n    </button>\n\n*/","export const fieldSet = [\n    {\n        name: 'City',\n        id: 'city',\n        type: 'text'\n    },\n    {\n        name: 'Population N',\n        id: 'population',\n        type: 'checkbox',\n        fun: 'COUNT',\n    },\n    {\n        name: 'Mean rent',\n        id: 'mean_rent',\n        type: 'checkbox',\n    },\n    {\n        name: 'Mean deposit',\n        id: 'mean_deposit',\n        type: 'checkbox',\n    },\n    {\n        name: 'Median rent',\n        id: 'med_rent',\n        type: 'checkbox',\n    },\n    {\n        name: 'Median deposit',\n        id: 'med_deposit',\n        type: 'checkbox',\n    },\n    {\n        name: 'SD rent',\n        id: 'sd_rent',\n        type: 'checkbox',\n        fun: 'STD',\n    },\n    {\n        name: 'SD deposit',\n        id: 'sd_deposit',\n        type: 'checkbox',\n    }\n]","import React, {Component} from \"react\";\nimport {fieldSet} from \"./fields_stats\";\nimport {newState, renderField, handleCheckHook, createLabel, handleChange} from \"./helper_fun\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {checkboxParams, textFieldParams} from \"./params_field_types\";\nimport ArticleService from \"../services/backend.routes\";\n\n\nexport default class StatisticForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...newState(fieldSet, ''),\n            submitted: false,\n            entries: [],\n            city: '',\n            currentEntry: null,\n            currentIndex: -1,\n        };\n\n    }\n    refreshList = () => {\n        this.setState({\n            currentEntry: null,\n            currentIndex: -1\n        });\n    }\n    retrieveEntries = () => {\n        this.refreshList()\n        const {city} = this.state;\n        ArticleService.getByParam('city', city)\n            .then(response => {\n                let data;\n                if (response.status === 204) {\n                    data = null;\n                } else data = response.data;\n                this.setState({\n                    entries: data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setSelection = (entry, index) => {\n        this.setState({\n            currentEntry: entry,\n            currentIndex: index\n        });\n    }\n\n    render() {\n        const {entries, currentEntry, currentIndex} = this.state;\n        return (\n            <div className={\"submit-form\"}>\n                {fieldSet.map((field) => {\n                    const {name, id, type} = field;\n                    switch (type) {\n                        case 'text':\n                            return (renderField(textFieldParams, id, name, (event => handleChange(this, id, event))));\n                        default:\n                            return null;\n                    }\n                })}\n                <button\n                    style={{marginTop: `25px`}}\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={this.retrieveEntries}>\n                    Search\n                </button>\n                <div className=\"col-md-6\">\n                    <h4 style={{paddingTop: `25px`}}>Article List</h4>\n\n                    <ul className=\"list-group\">\n                        {entries &&\n                        entries.map((entry, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setSelection(entry, index)}\n                                key={index}\n                            >\n                                {index + \". \" + entry.city}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className={\"position-absolute top-75 start-75\"}>\n                    {currentEntry && this.state.entries ? (\n                        <div>\n                            {createLabel(`${currentEntry.city}`)}\n                            <Link to={\"/nrp/articles/stats/\" + currentEntry.city} className=\"badge badge-warning\">\n                                <button type={\"button\"}>\n                                    Get statistics\n                                </button>\n                            </Link>\n                        </div>\n                    ) : (<div>\n                        <br/>\n                        <p>Please select a city</p>\n                    </div>)}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component, useEffect, useState} from \"react\";\nimport ArticleService from '../services/backend.routes'\nimport DisplayEntry from \"./comp.display_entry\";\nimport {fieldSet} from \"./fields_stats\";\nimport {renderField, renderRadio, newState, handleChange, handleCheckHook, stateful} from \"./helper_fun\";\nimport {Link, useParams, useRouteMatch, withRouter} from \"react-router-dom\";\nimport {checkboxParams, textFieldParams} from \"./params_field_types\";\nimport {toJSON} from \"lodash/seq\";\n\n\nconst Statistics = () => {\n    const {city} = useParams();\n    const [submitted, setSubmit] = useState(false);\n    const [data, setData] = useState({});\n    const [body, setBody] = useState(stateful(fieldSet, false));\n\n\n\n\n    function prepareParams() {\n        fieldSet.map((field, ix) => {\n            const {id, fun, col} = field\n        })\n    }\n\n    function retrieveStats() {\n        console.log(body)\n        ArticleService.getStatistics(city, body)\n            .then((response) => {\n                    console.log(response.data);\n                    setSubmit(true);\n                    setData(response.data);\n                }\n            )\n\n    }\n\n    return (<div className={\"submit-form\"}>\n        <h4 style={{paddingTop: `25px`}}>{city}</h4>\n        <div>\n            {submitted ?\n                (<DisplayEntry data={data}/>)\n                : (\n                    <div>\n                        {fieldSet.map((field) => {\n                            const {name, id, type} = field\n                            switch (type) {\n                                case 'checkbox':\n                                    return (renderField(checkboxParams, id, name, (event => handleCheckHook(body, setBody, id, event))));\n                                default:\n                                    return null;\n                            }\n                        })}\n                        < button\n                            style={{marginTop: `25px`}}\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={retrieveStats}\n                        >\n                            Get statistics\n                        </button>\n                    </div>)\n            }\n        </div>\n    </div>)\n};\n\nexport default Statistics;","import React, { Component } from \"react\";\nimport {Routes, Route, Link} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AddEntry from \"./components/comp.post_entry\";\nimport ArticleList from \"./components/comp.entry_list\"\nimport SelectCity from \"./components/comp.req_stats\"\nimport Statistics from \"./components/comp.stats\"\nimport {createHistory, createMemorySource, LocationProvider} from \"@reach/router\";\n//Main App\n\nlet history = createHistory(window)\n\n\nclass App extends Component {\n    render() {\n        return (\n            <LocationProvider history={history}>\n            <div>\n                <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                    <Link to=\"nrp\" className=\"navbar-brand\">\n                        Netherlands Rental Properties\n                   </Link>\n                    <div className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={\"nrp/articles/search?limit=5\"} className=\"nav-link\">\n                                Search\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={\"nrp/articles/create\"} className=\"nav-link\">\n                                Add\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={\"nrp/articles/stats\"} className=\"nav-link\">\n                                Statistics\n                            </Link>\n                        </li>\n                    </div>\n                </nav>\n\n                <div className=\"container mt-3\">\n                    <Routes>\n                        <Route exact path=\"nrp\" element={App}/>\n                        <Route path={\"nrp/articles/search/\"} element={<ArticleList/>} />\n                        <Route path={\"nrp/articles/create\"} element={<AddEntry/>} />\n                        <Route path={\"nrp/articles/stats/:city\"} element={<Statistics />} />\n                        <Route path={\"nrp/articles/stats\"} element={<SelectCity/>} />\n                    </Routes>\n                </div>\n            </div>\n                </LocationProvider>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {\n            'Service-Worker': 'script'\n        },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}