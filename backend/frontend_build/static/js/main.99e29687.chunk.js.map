{"version":3,"sources":["http-common.js","services/backend.routes.js","components/configs/fields_create.js","components/views/comp.display_entry.js","components/configs/params_field_types.js","components/utils/helper_fun.js","components/views/comp.post_entry.js","components/configs/fields_search.js","components/configs/fields_meta.js","components/views/comp.search_entries.js","components/configs/fields_stats.js","components/views/comp.req_stats.js","components/views/comp.stats.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","process","REACT_APP_API_BASE_URL","id","get","param","value","params","filter_options","meta","console","log","delete","patch","fields","conditions","data","post","put","lat","long","allArgs","_","pick","key","min","max","format","city","body","creationFields","name","type","options","values","DisplayEntry","props","generateLabel","clazz","field","color","font","className","style","fontWeight","htmlFor","generateDisplay","Object","entries","map","k","v","this","Component","textFieldParams","marginRight","rangeParams","checkboxParams","handleCheckHook","comp","_compSetter","e","target","checked","handleChangeHook","length","renderField","onChange","defaultValue","placeholder","createLabel","fieldName","tok","renderSelectHook","inputs","setInputs","event","o","ix","generateForm","defaultValues","URLSearchParams","renderRangeInput","isUndefined","renderRadioHook","generateButton","label","_func","onClick","valueSetter","id_min","id_max","class","defaultChecked","PostArticle","useState","fieldSet","submitted","state","setState","ArticleService","then","response","catch","el","fields_search","sqlOp","op","child","parent","fieldMap","Map","all_fields","forEach","set","fields_meta","meta_default","defaultState","update","searched","queryUpdate","singleUpdate","customFormat","download","SearchArticle","setEntries","currentEntry","setCurrentEntry","currentIndex","setIndex","bulkUpdate","setBulkUpdate","soloUpdate","setSoloUpdate","setMetaData","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","retrieveEntries","sendRequest","filterSearch","parseInputs","r","isNull","res","includes","updateData","updateEntries","_selfTriggerRedirect","p","append","replace","inputsCopy","structuredClone","arr","push","refreshList","_request","parsed","msg200","msg500","a","status","window","alert","setStateParam","objArr","JSON","stringify","toString","URL","createObjectURL","Blob","Accept","prevState","useEffect","obj","filterDelete","href","updateQuery","filterUpdate","updateAllEntries","entry","index","setSelection","title","externalId","prev","fun","StatisticForm","getByParam","defaultVal","i","newState","handleChange","marginTop","paddingTop","to","Statistics","useParams","setSubmit","setData","stateful","setBody","getStatistics","history","createHistory","App","exact","path","element","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.99e29687.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:6868/nrp/\",\n    headers: {'Access-Control-Allow-Origin': process.env.REACT_APP_API_BASE_URL},\n})","import _ from 'lodash';\nimport axios from '../http-common';\n\nclass BackendRoutes {\n    getById(id) {\n        return axios.get(`articles/id/${id}`);\n    }\n\n    getByParam(param, value) {\n        return axios.get(`articles/${param}`, {\n            params: {\n                value: value\n            }\n        });\n    }\n\n    filterSearch(filter_options, meta) {\n        return axios.get(`articles/search/filter`, {\n            params: filter_options,\n            headers: meta\n        })\n    }\n\n    filterDelete(filter_options, meta) {\n        console.log(filter_options);\n        return axios.delete(`articles/search/filter`, {\n            params: filter_options,\n            headers: meta\n        })\n    }\n\n    filterUpdate(filter_options, meta) {\n        return axios.patch(`articles/search/filter`, filter_options.fields,\n            {\n                params: filter_options.conditions,\n                headers: meta\n            })\n    }\n\n\n    create(data) {\n        return axios.post('articles/new', data); // test this ?\n    }\n\n    updateById(id, data) {\n        return axios.put(`articles/id/${id}`, data);\n    }\n\n    deleteById(id) {\n        return axios.delete(`articles/id/${id}`);\n    }\n\n    deleteByLocation(lat, long) {\n        return axios.delete('articles/location', {\n            params: {\n                lat: `${lat}`,\n                long: `${long}`,\n            },\n        });\n    }\n\n    deleteAll() {\n        return axios.delete('articles');\n    }\n\n    findByParameter(allArgs) {\n        return axios.get(\n            'articles/top-list/',\n            {\n                params: _.pick(allArgs, (value, key) => !!value), // test this\n                // probably needs headers\n            },\n        );\n    }\n\n    findByRent(min, max, format) {\n        return axios.get(\n            'articles/search-budget',\n            {\n                params: {\n                    min: `${min}`,\n                    max: `${max}`,\n                    format: `${format}`,\n                },\n            },\n        );\n    }\n\n    findByLocation(lat, long, format) {\n        return axios.get(\n            'articles/location?',\n            {\n                params: {\n                    lat: `${lat}`,\n                    long: `${long}`,\n                    format: `${format}`,\n                },\n            },\n        );\n    }\n\n    getStatistics(city, body) {\n        return axios.get(`articles/statistics/${city}`, {\n            params: body\n        })\n    }\n\n}\n\n\nexport default new BackendRoutes();\n","export const creationFields = [\n  {\n    name: 'Address',\n    id: 'title',\n    type: 'text',\n  },\n  {\n    name: 'Postal Code',\n    id: 'postalCode',\n    type: 'text',\n  },\n  {\n    name: 'City',\n    id: 'city',\n    type: 'text',\n  },\n  {\n    name: 'Area (m2)',\n    id: 'areaSqm',\n    type: 'text',\n  },\n  {\n    name: 'Rent',\n    id: 'rent',\n    type: 'text',\n  },\n  {\n    name: 'Deposit',\n    id: 'deposit',\n    type: 'text',\n  },\n  {\n    name: 'Latitude',\n    id: 'latitude',\n    type: 'text',\n  },\n  { name: 'Longitude',\n    id: 'longitude',\n    type: 'text',},\n  {\n    name: 'Room active',\n    id: 'isRoomActive',\n    type: 'checkbox',\n    options: ['Yes', 'No'],\n    values: [true, false],\n  }\n];\n","import React, {Component} from \"react\";\n\n\nexport default class DisplayEntry extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    generateLabel = (clazz, field, color, font) => {\n        return (<div className={clazz}>\n                <label style={{color: color, fontWeight: font }} htmlFor={field}>{`${field}`}</label>\n            </div>\n        )\n    }\n\n    generateDisplay = () => {\n        return <div className={\"display-entry\"}>\n            <ul>\n                {Object.entries(this.props.data).map(([k, v]) =>\n                    <li key={k}>\n                        {this.generateLabel(\"field\", k+` :`, \"blue\", \"bold\")}\n                        {this.generateLabel(\"value\", v, \"green\", \"normal\")}\n                    </li>\n                )}\n            </ul>\n        </div>\n    }\n\n    render() {\n        return this.generateDisplay();\n    }\n}","export const textFieldParams = {\n    type: 'text',\n    marginRight: '250px'\n}\nexport const rangeParams = {\n    type: 'number',\n    marginRight: '20px'\n}\nexport const checkboxParams = {\n    type: 'checkbox',\n    marginRight: '10px'\n}","/**\n * Helper functions Javascript file\n */\n\nimport React from \"react\";\nimport {checkboxParams, rangeParams, textFieldParams} from \"../configs/params_field_types\";\nimport {isUndefined} from \"lodash\";\n\n/**\n *\n * @param fieldSet\n * @param defaultVal\n * @returns {{submitted: boolean}}\n */\nexport function newState(fieldSet, defaultVal) {\n    let state = {submitted: false};\n    for (let i = 0; i < fieldSet.length; i++) {\n        state[`${fieldSet[i].id}`] = defaultVal;\n    }\n    return state;\n}\n\nexport function handleCheckHook(comp, _compSetter, value, e) {\n    comp[`${value}`] = e.target.checked;\n    _compSetter(comp);\n}\n\nexport function handleChangeHook(comp, _compSetter, value, e) {\n    if (e.target.value.length !== 0) {\n        comp[`${value}`] = e.target.value;\n    } else delete comp[`${value}`];\n    _compSetter(comp);\n    console.log(comp);\n}\n\nexport function handleChange(comp, value, event) {\n    comp.setState({[`${value}`]: event.target.value});\n}\n\n\nexport function renderField(field, params, onChange, defaultValue = \"\") {\n    const {name, id, placeholder} = field;\n    return (\n        <div className=\"form-group\">\n            <label style={{marginRight: params.marginRight}} id={id+name} >{name}</label>\n            <input type={params.type === \"range\" ? \"number\" : params.type}\n                   id={id}\n                   placeholder={placeholder}\n                   defaultValue={defaultValue}\n                   onChange={onChange}/>\n        </div>\n    );\n}\n\nexport function stateful(fieldSet, defaultVal) {\n    let state = {};\n    for (let i = 0; i < fieldSet.length; i++) {\n        state[`${fieldSet[i].id}`] = defaultVal;\n    }\n    return state;\n}\n\nexport function createLabel(fieldName, tok) {\n    return (<label id={fieldName} >{fieldName}</label>)\n}\n\nfunction renderSelectHook(field, inputs, setInputs) {\n    const {id, options, values, name} = field;\n    return <div>\n        {createLabel(name,id)}\n        <select onChange={(event => handleChangeHook(inputs,setInputs, id, event))}>\n            {options.map((o,ix) => {\n                return <option value={values[ix]}>{o}</option>\n            })}\n        </select> ;\n    </div>\n}\n\nexport function generateForm(fields, inputs, setInputs, defaultValues = new URLSearchParams()) {\n   return fields.map((field) => {\n        const {id, type} = field;\n        switch (type) {\n            case 'text':\n                return (renderField(field, textFieldParams,\n                    (e => {\n                        handleChangeHook(inputs, setInputs, id, e)\n                    }), defaultValues.get(`${id}`)))\n            case 'range':\n                return renderRangeInput(field, inputs, setInputs, defaultValues)\n            case 'checkbox':\n                if(isUndefined(inputs[id])) inputs[id] = false;\n                return (renderField(field, checkboxParams,\n                    (e => handleCheckHook(inputs, setInputs, id, e))));\n            case 'radio':\n                return (renderRadioHook(field, inputs, setInputs, defaultValues));\n            case 'select':\n                return (renderSelectHook(field, inputs, setInputs))\n            default:\n                return null;\n        }\n    })\n}\n\nexport function generateButton(label, _func ) {\n    return  <button\n        className=\"btn btn-outline-secondary\"\n        type=\"button\"\n        onClick={_func}\n    >{label}\n    </button>\n}\n\n\nexport function renderRangeInput(field, value, valueSetter, defaultValues = new URLSearchParams()) {\n    const {id, label} = field;\n    const id_min = id + \"_min\";\n    const id_max = id + \"_max\";\n    return (\n        <section class=\"mb-lg-2\">\n            <div className=\"d-flex align-items-center mt-sm-1 pb-1\">\n                <div className=\"md-form md-outline my-0\">\n                    {\n                        renderField(field,rangeParams,\n                            (event => handleChangeHook(value, valueSetter, id_min, event)), defaultValues.get(id_min))}\n                </div>\n                <div className=\"md-form md-outline my-0\">\n                    {\n                        renderField(field, rangeParams,\n                            (event => handleChangeHook(value, valueSetter, id_max, event)), defaultValues.get(id_max))}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport function renderRadioHook(field, value, valueSetter, defaultValue = new URLSearchParams()) {\n    const {id, options, values, label} = field;\n    return (\n        <>\n            <div>\n                <ul>\n                    {createLabel(label, id)}\n                    {options.map((o, ix) => (\n                        <div className=\"form-group\">\n                            <input type=\"radio\"\n                                   id={`${id}_${o}`}\n                                   name={id}\n                                   defaultChecked={!isUndefined(defaultValue.get(`${id}`))\n                                   && defaultValue.get(`${id}`) === values[ix] }\n                                   value={values[ix]}\n                                   onChange={(event => handleChangeHook(value, valueSetter, id, event))}\n                            />\n                            <label htmlFor={`${id}_${o}`}>{o}</label>\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        </>\n    )\n}\n\n","import React, {useState} from 'react';\nimport ArticleService from '../../services/backend.routes';\nimport {creationFields} from '../configs/fields_create';\nimport DisplayEntry from \"./comp.display_entry\";\nimport { generateForm, generateButton} from \"../utils/helper_fun\";\n\nconst PostArticle = () => {\n\n    const [fieldSet, updateFieldSet] = useState(creationFields);\n    const [inputs, setInputs] = useState({});\n    const [state, setState] = useState({submitted: false, data: null});\n\n    function uploadArticle() {\n        ArticleService.create(inputs)\n            .then((response) => {\n                console.log(response.data);\n                setState({submitted: true, data: response.data});\n            }).catch((el) => {\n            console.log(el);\n        });\n    }\n\n\n    function refresh() {\n        setState({submitted: false, data: null});\n        setInputs({});\n    }\n\n    return (\n        <div className=\"submit-form\">\n            {state.submitted ? (\n                <div>\n                    <h5>Article was uploaded into the database!</h5>\n                    <DisplayEntry data={state.data}/>\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={refresh}>\n                        Continue\n                    </button>\n                </div>\n            ) : (\n                <form>\n                    {generateForm(fieldSet, inputs, setInputs)}\n                    {generateButton(\"Submit\", uploadArticle)}\n                </form>)\n            }\n        </div>\n    );\n\n}\n\n\n\nexport default PostArticle;\n\n/*\n{\n    searchFields.map((field) => { //helperfun abstract out\n        const {\n            name, id, type, options, values\n        } = field;\n        switch (type) {\n            case 'text':\n                return renderField(textFieldParams, id, name, event => handleChange(this, id, event))\n            case 'radio':\n                return (renderRadio(this, id, name, options, values));\n            default:\n                return null;\n        }\n    })\n}\n\n */\n","export const fields_search = [\n    {\n        id: 'externalId',\n        type: 'text',\n        name: 'External Id',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        id: 'rent',\n        type: 'range',\n        name: 'Rent',\n        placeholder: 'rent',\n        sqlOp: ['gte', 'lte'],\n        op: 'like',\n    },\n    {\n        name: 'Address',\n        id: 'title',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'Postal Code',\n        id: 'postalCode',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'City',\n        id: 'city',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'like',\n    },\n    {\n        name: 'Area (m2)',\n        id: 'areaSqm',\n        type: 'range',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Deposit',\n        id: 'deposit',\n        type: 'range',\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Room active',\n        id: 'isRoomActive',\n        type: 'radio',\n        options: ['Any', 'Y', 'N'],\n        values: ['', 'true', 'false'],\n        placeholder: 'ID',\n        sqlOp: 'where',\n        op: 'eq',\n    },\n    {\n        name: 'Order:',\n        id: 'order',\n        child: 'order_by',\n        type: 'radio',\n        options: ['None', 'Ascending', 'Descending'],\n        values: ['', 'ASC', 'DESC'],\n        placeholder: 'ID',\n        sqlOp: 'order',\n    },\n    {\n        name: 'Order by:',\n        parent: 'order',\n        id: 'order_by',\n        type: 'radio',\n        options: ['Rent', 'Deposit', 'Area(m2)'],\n        values: ['rent', 'deposit', 'areaSqm'],\n        placeholder: 'orderBy',\n        sqlOp: 'order',\n    },\n    {\n        name: 'Limit ',\n        id: 'limit',\n        type: 'text',\n        placeholder: 'ID',\n        sqlOp: 'limit',\n    },\n];\n\nconst fieldMap = new Map();\n\nexport const all_fields =\n    [\n        {id: 'externalId'},\n        {id: 'rent'},\n        {id: 'areaSqm_min'},\n        {id: 'areaSqm_max'},\n        {id: 'deposit_min'},\n        {id: 'deposit_max'},\n        {id: 'isRoomActive'},\n        {id: 'limit'},\n        {id: 'order'},\n        {id: 'order_by'},\n        {id: 'isRoomActive'},\n        {id: 'areaSqm'},\n        {id: 'city'},\n        {id: 'title'},\n        {id: 'rent_min'},\n        {id: 'rent_max'},\n        {id: 'postalCode'}\n    ]\n\n\nfields_search.forEach((o) => {\n    fieldMap.set(o.id, o);\n});\n\nexport {fieldMap}","export const fields_meta = [\n    {\n        id: 'Accept',\n        type: 'select',\n        name: 'Response format',\n        options: ['JSON', 'CSV'],\n        values: ['application/json', 'text/csv']\n    }\n]\n\nexport const meta_default = {\n    'Accept' : 'application/json'\n}\n\nexport const formats = {\n    'application/json': '.json',\n    'text/csv' : '.csv',\n}","import React, {useEffect, useState} from \"react\";\nimport ArticleService from '../../services/backend.routes'\nimport DisplayEntry from \"./comp.display_entry\";\nimport _, {isNull, isUndefined} from \"lodash\";\nimport {fields_search, fieldMap, all_fields} from \"../configs/fields_search\";\nimport {creationFields} from \"../configs/fields_create\";\nimport structuredClone from \"@ungap/structured-clone\"\nimport {\n    generateButton, generateForm,\n} from \"../utils/helper_fun\";\nimport {useNavigate, useParams} from \"@reach/router\";\nimport {useSearchParams} from 'react-router-dom'\nimport {fields_meta, formats, meta_default as formatsmeta, meta_default} from \"../configs/fields_meta\";\n\n\nconst defaultState = {\n    update: false,\n    response: {},\n    searched: false,\n    queryUpdate: false,\n    singleUpdate: false,\n    customFormat: true,\n    download: null\n}\n\nconst SearchArticle = (props) => {\n    const [state, setState] = useState(defaultState);\n    const [entries, setEntries] = useState([]);\n    const [currentEntry, setCurrentEntry] = useState(null);\n    const [currentIndex, setIndex] = useState(-1);\n    const [fieldSet, updateFieldSet] = useState(fields_search);\n    const [bulkUpdate, setBulkUpdate] = useState({});\n    const [soloUpdate, setSoloUpdate] = useState({});\n    const [meta, setMetaData] = useState(meta_default);\n    let navigate = useNavigate();\n    let [inputs, setInputs] = useState({});\n    let [searchParams, setSearchParams] = useSearchParams();\n\n    function retrieveEntries() {\n        sendRequest(ArticleService.filterSearch, parseInputs(),\n            \"Searching completed\", \"Server error occurred\")\n            .then((r) => {\n                if (!isNull(r)) updateEntries(r);\n            });\n    }\n\n    function updateEntries(res) {\n        if (res.headers['content-type'].includes('application/json')) {\n            setEntries(res.data);\n        }\n        updateData(res);\n    }\n\n    useEffect(() => {\n        all_fields.forEach((obj) => {\n            const param = searchParams.get(`${obj.id}`);\n            if (!isNull(param)) {\n                if (isUndefined(inputs[`${obj.id}`])) {\n                    inputs[`${obj.id}`] = param;\n                }\n            }\n        });\n        setInputs(inputs);\n        retrieveEntries();\n    }, [])\n\n    function _selfTriggerRedirect() {\n        const p = new URLSearchParams();\n        Object.entries(inputs).forEach(([key, value]) => {\n            p.append(`${key}`, `${value}`);\n        })\n        setSearchParams(inputs);\n        navigate(\"/../nrp/articles/search?\" + p, {replace: true});\n    }\n\n    function parseInputs() {\n        const inputsCopy = structuredClone(inputs)\n        Object.entries(inputsCopy).forEach(([key, value]) => {\n            const field = fieldMap.get(key);\n            if (!isUndefined(field) && !isUndefined(field.parent)) {\n                if (!isUndefined(inputsCopy[field.parent])) {\n                    const v = inputsCopy[key];\n                    const arr = [];\n                    arr.push(v);\n                    arr.push(inputsCopy[field.parent])\n                    inputsCopy[field.parent] = arr;\n                }\n                delete inputsCopy[key]\n            }\n        })\n        return inputsCopy;\n    }\n\n\n    function refreshList() {\n        setEntries([]);\n        setCurrentEntry(null);\n        setIndex(-1);\n    }\n\n    function setSelection(entry, index) {\n        setCurrentEntry(entry);\n        setIndex(index);\n    }\n\n    function deleteSelectedEntry() {\n        sendRequest(ArticleService.filterDelete, {externalId: currentEntry.externalId},\n            \"Delete query accepted rows! Filter properties used\\n\", \"0 entries deleted\")\n            .then(() => {\n                setEntries([]);\n                refreshList();\n            })\n    }\n\n    function getSoloUpdateForm() {\n        setEntries([currentEntry]);\n        setStateParam(\"singleUpdate\", true);\n    }\n\n    function updateSelectedEntry() {\n        const updateQuery = {\n            conditions: {externalId: currentEntry.externalId},\n            fields: soloUpdate\n        }\n        sendRequest(ArticleService.filterUpdate,\n            updateQuery,\n            \"Article patch sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2), \"500 Internal server error\").then((r) => {\n                if (!isNull(r)) {\n                    setCurrentEntry(prev => ({...prev, ...soloUpdate}))\n                }\n            }\n        );\n    }\n\n    function deleteAllEntries() {\n        const parsed = parseInputs()\n        sendRequest(ArticleService.filterDelete, parsed,\n            \"Delete query sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2), \"500 Internal server error\").then(() => {\n            refreshList();\n        });\n    }\n\n    function updateAllEntries() {\n\n        const parsed = parseInputs()\n        const updateQuery = {\n            conditions: parsed,\n            fields: bulkUpdate\n        }\n        sendRequest(ArticleService.filterUpdate, updateQuery,\n            \"Article patch sent! Filter properties used\\n\" +\n            JSON.stringify(inputs, null, 2),\n            \"500 Internal server error\").then(r => {\n            if (!isUndefined(r)) {\n                window.alert(\"Server says:\\nUpdated \" + r.data + \" rows! <3\")\n                refreshList();\n            }\n        });\n\n    }\n\n    async function sendRequest(_request, parsed, msg200, msg500,) {\n        return await _request(parsed, meta)\n            .then(response => {\n                if (response.status === 500) {\n                    window.alert(msg500);\n                    setStateParam('response', {});\n                    return null;\n                } else {\n                    window.alert(msg200);\n                    updateData(response);\n                    return response;\n                }\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    function updateData(res) {\n        let objArr;\n        setStateParam('response', res.data);\n        if (res.headers['content-type'].includes('application/json')) {\n            objArr = JSON.stringify(res.data);\n        } else {\n            objArr = res.data.toString();\n        }\n        setStateParam('download',\n            URL.createObjectURL(new Blob([objArr],\n                {type: meta.Accept})));\n    }\n\n    function resetState() {\n        setEntries([]);\n        setState(prevState => ({\n            ...prevState,\n            update: false,\n            searched: false\n        }))\n    }\n\n    function setStateParam(param, value) {\n        setState(prevState => ({\n            ...prevState,\n            [param]: value\n        }))\n    }\n\n    return <div className=\"list row\">\n        <div className=\"col-md-8\">\n            {generateForm(fields_meta, meta, setMetaData)}\n            {generateForm(fieldSet, inputs, setInputs, searchParams)}\n            <div className=\"input-group-append\">\n                {generateButton(\"Search\", () => {\n                    resetState();\n                    retrieveEntries();\n                    _selfTriggerRedirect();\n                })}\n                {generateButton(\"Update all\", () => {\n                    refreshList();\n                    setEntries([]);\n                    setStateParam('update', true)\n                })}\n                {generateButton(\"Delete all\", deleteAllEntries)}\n                {\n                    <a href={state.download} download>Click to download</a>\n                }\n                {state.update ? <form className=\"col-md-8\">\n                    {generateForm(creationFields, bulkUpdate, setBulkUpdate)}\n                    {generateButton(\"Update\", () => {\n                        updateAllEntries();\n                        _selfTriggerRedirect();\n                    })}\n                </form> : null}\n            </div>\n        </div>\n        <div className=\"col-md-6\">\n            <h4>Article List</h4>\n            <ul className=\"list-group\">\n                {entries.length > 0 &&\n                entries.map((entry, index) =>\n                    <li\n                        className={\"list-group-item \" + (index === currentIndex ? \"active\" : \"\")}\n                        onClick={() => setSelection(entry, index)}\n                        key={index}>\n                        {entry.title + \", \" + entry.city}\n                    </li>)}\n            </ul>\n\n        </div>\n        <div className=\"col-md-6\">\n            {currentEntry && entries ? <div className={\"col-md-8\"}>\n                <DisplayEntry data={currentEntry}/>\n                <button\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={deleteSelectedEntry}>\n                    Delete\n                </button>\n                <button\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={getSoloUpdateForm}>\n                    Update\n                </button>\n                <div>\n                    {state.singleUpdate ?\n                        <div>{generateForm(creationFields, soloUpdate, setSoloUpdate)}\n                            {generateButton(\"PATCH\", updateSelectedEntry)}</div> : null}\n                </div>\n            </div> : <div>\n                <br/>\n                <p>No article selected</p>\n            </div>}\n        </div>\n    </div>\n}\n\nexport default SearchArticle;\n","export const fieldSet = [\n    {\n        name: 'City',\n        id: 'city',\n        type: 'text'\n    },\n    {\n        name: 'Population N',\n        id: 'population',\n        type: 'checkbox',\n        fun: 'COUNT',\n    },\n    {\n        name: 'Mean rent',\n        id: 'mean_rent',\n        type: 'checkbox',\n    },\n    {\n        name: 'Mean deposit',\n        id: 'mean_deposit',\n        type: 'checkbox',\n    },\n    {\n        name: 'Median rent',\n        id: 'med_rent',\n        type: 'checkbox',\n    },\n    {\n        name: 'Median deposit',\n        id: 'med_deposit',\n        type: 'checkbox',\n    },\n    {\n        name: 'SD rent',\n        id: 'sd_rent',\n        type: 'checkbox',\n        fun: 'STD',\n    },\n    {\n        name: 'SD deposit',\n        id: 'sd_deposit',\n        type: 'checkbox',\n    }\n]","import React, {Component} from \"react\";\nimport {fieldSet} from \"../configs/fields_stats\";\nimport {newState, renderField, createLabel, handleChange} from \"../utils/helper_fun\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {checkboxParams, textFieldParams} from \"../configs/params_field_types\";\nimport ArticleService from \"../../services/backend.routes\";\n\n\nexport default class StatisticForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...newState(fieldSet, ''),\n            submitted: false,\n            entries: [],\n            city: '',\n            currentEntry: null,\n            currentIndex: -1,\n        };\n\n    }\n    refreshList = () => {\n        this.setState({\n            currentEntry: null,\n            currentIndex: -1\n        });\n    }\n    retrieveEntries = () => {\n        this.refreshList()\n        const {city} = this.state;\n        ArticleService.getByParam('city', city)\n            .then(response => {\n                let data;\n                if (response.status === 204) {\n                    data = null;\n                } else data = response.data;\n                this.setState({\n                    entries: data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    setSelection = (entry, index) => {\n        this.setState({\n            currentEntry: entry,\n            currentIndex: index\n        });\n    }\n\n    render() {\n        const {entries, currentEntry, currentIndex} = this.state;\n        return (\n            <div className={\"submit-form\"}>\n                {fieldSet.map((field) => {\n                    const {id, type} = field;\n                    switch (type) {\n                        case 'text':\n                            return (renderField(field, textFieldParams, (event => handleChange(this, id, event))));\n                        default:\n                            return null;\n                    }\n                })}\n                <button\n                    style={{marginTop: `25px`}}\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    onClick={this.retrieveEntries}>\n                    Search\n                </button>\n                <div className=\"col-md-6\">\n                    <h4 style={{paddingTop: `25px`}}>Article List</h4>\n\n                    <ul className=\"list-group\">\n                        {entries &&\n                        entries.map((entry, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" +\n                                    (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => this.setSelection(entry, index)}\n                                key={index}\n                            >\n                                {index + \". \" + entry.city}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className={\"position-absolute top-75 start-75\"}>\n                    {currentEntry && this.state.entries ? (\n                        <div>\n                            {createLabel(`${currentEntry.city}`)}\n                            <Link to={\"/nrp/articles/stats/\" + currentEntry.city} className=\"badge badge-warning\">\n                                <button type={\"button\"}>\n                                    Get statistics\n                                </button>\n                            </Link>\n                        </div>\n                    ) : (<div>\n                        <br/>\n                        <p>Please select a city</p>\n                    </div>)}\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component, useEffect, useState} from \"react\";\nimport ArticleService from '../../services/backend.routes'\nimport DisplayEntry from \"./comp.display_entry\";\nimport {fieldSet} from \"../configs/fields_stats\";\nimport {renderField, handleCheckHook, stateful} from \"../utils/helper_fun\";\nimport { useParams} from \"react-router-dom\";\nimport {checkboxParams, textFieldParams} from \"../configs/params_field_types\";\nimport {toJSON} from \"lodash/seq\";\n\n\nconst Statistics = () => {\n    const {city} = useParams();\n    const [submitted, setSubmit] = useState(false);\n    const [data, setData] = useState({});\n    const [body, setBody] = useState(stateful(fieldSet, false));\n\n\n\n\n    function prepareParams() {\n        fieldSet.map((field, ix) => {\n            const {id, fun, col} = field\n        })\n    }\n\n    function retrieveStats() {\n        console.log(body)\n        ArticleService.getStatistics(city, body)\n            .then((response) => {\n                    console.log(response.data);\n                    setSubmit(true);\n                    setData(response.data);\n                }\n            )\n\n    }\n\n    return (<div className={\"submit-form\"}>\n        <h4 style={{paddingTop: `25px`}}>{city}</h4>\n        <div>\n            {submitted ?\n                (<DisplayEntry data={data}/>)\n                : (\n                    <div>\n                        {fieldSet.map((field) => {\n                            const {id, type} = field\n                            switch (type) {\n                                case 'checkbox':\n                                    return (renderField(field, checkboxParams, (event => handleCheckHook(body, setBody, id, event))));\n                                default:\n                                    return null;\n                            }\n                        })}\n                        < button\n                            style={{marginTop: `25px`}}\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={retrieveStats}\n                        >\n                            Get statistics\n                        </button>\n                    </div>)\n            }\n        </div>\n    </div>)\n};\n\nexport default Statistics;","import React, { Component } from \"react\";\nimport {Routes, Route, Link} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AddEntry from \"./components/views/comp.post_entry\";\nimport ArticleList from \"./components/views/comp.search_entries\"\nimport SelectCity from \"./components/views/comp.req_stats\"\nimport Statistics from \"./components/views/comp.stats\"\nimport {createHistory, LocationProvider} from \"@reach/router\";\n//Main App\n\nlet history = createHistory(window)\n\nconst App = () => {\n        return (\n            <LocationProvider history={history}>\n                <div>\n                    <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n                        <Link to=\"nrp\" className=\"navbar-brand\">\n                            Netherlands Rental Properties\n                        </Link>\n                        <div className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={\"nrp/articles/search?limit=5\"} className=\"nav-link\">\n                                    Search\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to={\"nrp/articles/create\"} className=\"nav-link\">\n                                    Add\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to={\"nrp/articles/stats\"} className=\"nav-link\">\n                                    Statistics\n                                </Link>\n                            </li>\n                        </div>\n                    </nav>\n\n                    <div className=\"container mt-3\">\n                        <Routes>\n                            <Route exact path=\"nrp\" element={App}/>\n                            <Route path={\"nrp/articles/stats/raw/:file\"}  element={<SelectCity/>} />\n                            <Route path={\"nrp/articles/search/\"} element={<ArticleList/>} />\n                            <Route path={\"nrp/articles/create\"} element={<AddEntry/>} />\n                            <Route path={\"nrp/articles/stats/:city\"} element={<Statistics />} />\n                            <Route path={\"nrp/articles/stats\"} element={<SelectCity/>} />\n                        </Routes>\n                    </div>\n                </div>\n            </LocationProvider>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {\n            'Service-Worker': 'script'\n        },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}